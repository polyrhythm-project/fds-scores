#!/usr/bin/perl
#
# Programmer:    Craig Stuart Sapp <craig.stanford.edu>
# Creation Date: Mon Jun 26 15:54:06 PDT 2023
# Last Modified: Mon Jul 14 19:24:06 CEST 2025
# Filename:      get-composite-events-count
# Syntax:        perl 5
#
# Description:   Count the number of composite events (exclude rests and tie continuations)
#

use strict;
use Getopt::Long;

my $composite = `which composite`;
chomp $composite;
die "Cannot find composite tool.  Install humlib (https://github.com/craigsapp/humlib)\n" if $composite =~ /^\s*$/;

my $extractx = `which extractx`;
chomp $extractx;
die "Cannot find extractx tool.  Install humextras (https://github.com/craigsapp/humextra)\n" if $extractx =~ /^\s*$/;

my $rid = `which ridx`;
chomp $rid;
die "Cannot find ridx tool.  Install humextras (https://github.com/craigsapp/humextra)\n" if $rid =~ /^\s*$/;

my $audioDuration;  # duration in seconds if not extracting from file.
my $verboseQ = 0;   # -v will list the composite event counts and the durations in seconds used for calculations
my $fileQ = 0;      # -f will give the file after the result on the same line.

Getopt::Long::Configure("bundling");
GetOptions (
   'v|verbose' => \$verboseQ,
   'f|file' => \$fileQ,
   'd|s|audio-duration|seconds=s' => \$audioDuration
);

while (my $id = <>) {
	chomp $id;
	my $file = getFileByID($id);
	if ($file =~ /^\s*$/) {
		print "\n";
		next;
	}
	print "$file ========================================\n" if $verboseQ;
	my ($coincidence, $composite, $groupa, $groupb) = processFile($file);

	if ($composite >= 0) {
		print $composite;
	}
	print "\t";

	if ($groupa >= 0) {
		print $groupa;
	}
	print "\t";

	if ($groupb >= 0) {
		print $groupb;
	}
	print "\t";

	if ($coincidence >= 0) {
		print $coincidence;
	}
	print "\n";

}



##############################
##
## getFileById --
##

sub getFileByID {
	my ($id) = @_;
	my @files = glob("[RT]{$id}_*");
	return "" if @files == 0;
	return $files[0] if @files == 1;
	return "" if @files > 1;
}



##############################
##
## processFile -- extract data and calculate score
## 
## *I"Coincidence\n(3 events)	*I"Composite\n(32 events)	*I"Group A\n(26 events)	*I"Group B\n(9 events)
##

sub processFile {
	my ($file) = @_;
	my $contents = `$composite -cegB $file | grep Coincidence.*events `;
	my $coincidence = -1;
	my $composite = -2;
	my $groupa = -3;
	my $groupb = -4;
	if ($contents =~ /Coincidence\\n\((\d+) event/) {
		$coincidence = $1;
	}
	if ($contents =~ /Composite\\n\((\d+) event/) {
		$composite = $1;
	}
	if ($contents =~ /Group A\\n\((\d+) event/) {
		$groupa = $1;
	}
	if ($contents =~ /Group B\\n\((\d+) event/) {
		$groupb = $1;
	}
	
	return ($coincidence, $composite, $groupa, $groupb);
}



